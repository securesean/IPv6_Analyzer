#!/usr/bin/env python

# Sean Pierce @secure_sean
# Feb 2022
# This is a silly program to help me codify IPv6 knowledge.
# Features: Translates IPv6 addresses in GPG Keywords and Bitcoin seed words
# Tells you about the IPv6 address given
# If a Unicast address is detected where we have a 64 bit EUI, this will display the would-be MAC address and org info

import re
import sys
import ipaddress
from colorama import init, Fore, Back, Style
init()


from requests import get



# TODO: Look up who was issued the prefix/"allocation"/"inetnum":
#       https://www.arin.net/resources/registry/whois/rws/api/
#       https://stat.ripe.net/app/launchpad
# TODO: Put IPv6 address in as a parameter
# TODO: macToIPv6_self_stateless_config
# TODO: macToIPv6_only_last_64_bits
# Idea: maybe implement traceroute and port scanning
# Idea: get my own IPv6 Address(s) and do analysis. Requests -> ifconfig.co , or www.kame.net, linux-ipv6.org, ipv6-test.com

ipStr = "2607:f8b0:4009:802::200e" #




def macToIPv6_self_stateless_config(mac):
    return "fe80::" + macToIPv6_only_last_64_bits_EUI(mac)

# Stolen from: https://stackoverflow.com/questions/37140846/how-to-convert-ipv6-link-local-address-to-mac-address-in-python
# But can also be done with scapy:
def ipv62mac(ipv6: str) -> str:
    # remove subnet info if given
    subnetIndex = ipv6.find("/")
    if subnetIndex != -1:
        ipv6 = ipv6[:subnetIndex]

    ipv6Parts = ipv6.split(":")
    macParts = []
    for ipv6Part in ipv6Parts[-4:]:
        while len(ipv6Part) < 4:
            ipv6Part = "0" + ipv6Part
        macParts.append(ipv6Part[:2])
        macParts.append(ipv6Part[-2:])

    # modify parts to match MAC value
    macParts[0] = "%02x" % (int(macParts[0], 16) ^ 2)
    del macParts[4]
    del macParts[3]

    return ":".join(macParts)

# Stolen from https://gist.github.com/wido/f5e32576bb57b5cc6f934e177a37a0d3
def macToIPv6_only_last_64_bits_EUI(mac: str, prefix=None):
    '''
        Convert a MAC address to a EUI64 address
        or, with prefix provided, a full IPv6 address
        '''
    # http://tools.ietf.org/html/rfc4291#section-2.5.1
    eui64 = re.sub(r'[.:-]', '', mac).lower()
    eui64 = eui64[0:6] + 'fffe' + eui64[6:]
    eui64 = hex(int(eui64[0:2], 16) ^ 2)[2:].zfill(2) + eui64[2:]

    if prefix is None:
        return ':'.join(re.findall(r'.{4}', eui64))
    else:
        try:
            net = ipaddress.ip_network(prefix, strict=False)
            euil = int('0x{0}'.format(eui64), 16)
            return str(net[euil])
        except:  # pylint: disable=bare-except
            print("Error in generating EUI64 bit!")
            return

#print("00:17:f2:ea:59:46")
#print(macToIPv6_only_last_64_bits_EUI("00:17:f2:ea:59:46"))

bip39WordList = [
"abandon",
"ability",
"able",
"about",
"above",
"absent",
"absorb",
"abstract",
"absurd",
"abuse",
"access",
"accident",
"account",
"accuse",
"achieve",
"acid",
"acoustic",
"acquire",
"across",
"act",
"action",
"actor",
"actress",
"actual",
"adapt",
"add",
"addict",
"address",
"adjust",
"admit",
"adult",
"advance",
"advice",
"aerobic",
"affair",
"afford",
"afraid",
"again",
"age",
"agent",
"agree",
"ahead",
"aim",
"air",
"airport",
"aisle",
"alarm",
"album",
"alcohol",
"alert",
"alien",
"all",
"alley",
"allow",
"almost",
"alone",
"alpha",
"already",
"also",
"alter",
"always",
"amateur",
"amazing",
"among",
"amount",
"amused",
"analyst",
"anchor",
"ancient",
"anger",
"angle",
"angry",
"animal",
"ankle",
"announce",
"annual",
"another",
"answer",
"antenna",
"antique",
"anxiety",
"any",
"apart",
"apology",
"appear",
"apple",
"approve",
"april",
"arch",
"arctic",
"area",
"arena",
"argue",
"arm",
"armed",
"armor",
"army",
"around",
"arrange",
"arrest",
"arrive",
"arrow",
"art",
"artefact",
"artist",
"artwork",
"ask",
"aspect",
"assault",
"asset",
"assist",
"assume",
"asthma",
"athlete",
"atom",
"attack",
"attend",
"attitude",
"attract",
"auction",
"audit",
"august",
"aunt",
"author",
"auto",
"autumn",
"average",
"avocado",
"avoid",
"awake",
"aware",
"away",
"awesome",
"awful",
"awkward",
"axis",
"baby",
"bachelor",
"bacon",
"badge",
"bag",
"balance",
"balcony",
"ball",
"bamboo",
"banana",
"banner",
"bar",
"barely",
"bargain",
"barrel",
"base",
"basic",
"basket",
"battle",
"beach",
"bean",
"beauty",
"because",
"become",
"beef",
"before",
"begin",
"behave",
"behind",
"believe",
"below",
"belt",
"bench",
"benefit",
"best",
"betray",
"better",
"between",
"beyond",
"bicycle",
"bid",
"bike",
"bind",
"biology",
"bird",
"birth",
"bitter",
"black",
"blade",
"blame",
"blanket",
"blast",
"bleak",
"bless",
"blind",
"blood",
"blossom",
"blouse",
"blue",
"blur",
"blush",
"board",
"boat",
"body",
"boil",
"bomb",
"bone",
"bonus",
"book",
"boost",
"border",
"boring",
"borrow",
"boss",
"bottom",
"bounce",
"box",
"boy",
"bracket",
"brain",
"brand",
"brass",
"brave",
"bread",
"breeze",
"brick",
"bridge",
"brief",
"bright",
"bring",
"brisk",
"broccoli",
"broken",
"bronze",
"broom",
"brother",
"brown",
"brush",
"bubble",
"buddy",
"budget",
"buffalo",
"build",
"bulb",
"bulk",
"bullet",
"bundle",
"bunker",
"burden",
"burger",
"burst",
"bus",
"business",
"busy",
"butter",
"buyer",
"buzz",
"cabbage",
"cabin",
"cable",
"cactus",
"cage",
"cake",
"call",
"calm",
"camera",
"camp",
"can",
"canal",
"cancel",
"candy",
"cannon",
"canoe",
"canvas",
"canyon",
"capable",
"capital",
"captain",
"car",
"carbon",
"card",
"cargo",
"carpet",
"carry",
"cart",
"case",
"cash",
"casino",
"castle",
"casual",
"cat",
"catalog",
"catch",
"category",
"cattle",
"caught",
"cause",
"caution",
"cave",
"ceiling",
"celery",
"cement",
"census",
"century",
"cereal",
"certain",
"chair",
"chalk",
"champion",
"change",
"chaos",
"chapter",
"charge",
"chase",
"chat",
"cheap",
"check",
"cheese",
"chef",
"cherry",
"chest",
"chicken",
"chief",
"child",
"chimney",
"choice",
"choose",
"chronic",
"chuckle",
"chunk",
"churn",
"cigar",
"cinnamon",
"circle",
"citizen",
"city",
"civil",
"claim",
"clap",
"clarify",
"claw",
"clay",
"clean",
"clerk",
"clever",
"click",
"client",
"cliff",
"climb",
"clinic",
"clip",
"clock",
"clog",
"close",
"cloth",
"cloud",
"clown",
"club",
"clump",
"cluster",
"clutch",
"coach",
"coast",
"coconut",
"code",
"coffee",
"coil",
"coin",
"collect",
"color",
"column",
"combine",
"come",
"comfort",
"comic",
"common",
"company",
"concert",
"conduct",
"confirm",
"congress",
"connect",
"consider",
"control",
"convince",
"cook",
"cool",
"copper",
"copy",
"coral",
"core",
"corn",
"correct",
"cost",
"cotton",
"couch",
"country",
"couple",
"course",
"cousin",
"cover",
"coyote",
"crack",
"cradle",
"craft",
"cram",
"crane",
"crash",
"crater",
"crawl",
"crazy",
"cream",
"credit",
"creek",
"crew",
"cricket",
"crime",
"crisp",
"critic",
"crop",
"cross",
"crouch",
"crowd",
"crucial",
"cruel",
"cruise",
"crumble",
"crunch",
"crush",
"cry",
"crystal",
"cube",
"culture",
"cup",
"cupboard",
"curious",
"current",
"curtain",
"curve",
"cushion",
"custom",
"cute",
"cycle",
"dad",
"damage",
"damp",
"dance",
"danger",
"daring",
"dash",
"daughter",
"dawn",
"day",
"deal",
"debate",
"debris",
"decade",
"december",
"decide",
"decline",
"decorate",
"decrease",
"deer",
"defense",
"define",
"defy",
"degree",
"delay",
"deliver",
"demand",
"demise",
"denial",
"dentist",
"deny",
"depart",
"depend",
"deposit",
"depth",
"deputy",
"derive",
"describe",
"desert",
"design",
"desk",
"despair",
"destroy",
"detail",
"detect",
"develop",
"device",
"devote",
"diagram",
"dial",
"diamond",
"diary",
"dice",
"diesel",
"diet",
"differ",
"digital",
"dignity",
"dilemma",
"dinner",
"dinosaur",
"direct",
"dirt",
"disagree",
"discover",
"disease",
"dish",
"dismiss",
"disorder",
"display",
"distance",
"divert",
"divide",
"divorce",
"dizzy",
"doctor",
"document",
"dog",
"doll",
"dolphin",
"domain",
"donate",
"donkey",
"donor",
"door",
"dose",
"double",
"dove",
"draft",
"dragon",
"drama",
"drastic",
"draw",
"dream",
"dress",
"drift",
"drill",
"drink",
"drip",
"drive",
"drop",
"drum",
"dry",
"duck",
"dumb",
"dune",
"during",
"dust",
"dutch",
"duty",
"dwarf",
"dynamic",
"eager",
"eagle",
"early",
"earn",
"earth",
"easily",
"east",
"easy",
"echo",
"ecology",
"economy",
"edge",
"edit",
"educate",
"effort",
"egg",
"eight",
"either",
"elbow",
"elder",
"electric",
"elegant",
"element",
"elephant",
"elevator",
"elite",
"else",
"embark",
"embody",
"embrace",
"emerge",
"emotion",
"employ",
"empower",
"empty",
"enable",
"enact",
"end",
"endless",
"endorse",
"enemy",
"energy",
"enforce",
"engage",
"engine",
"enhance",
"enjoy",
"enlist",
"enough",
"enrich",
"enroll",
"ensure",
"enter",
"entire",
"entry",
"envelope",
"episode",
"equal",
"equip",
"era",
"erase",
"erode",
"erosion",
"error",
"erupt",
"escape",
"essay",
"essence",
"estate",
"eternal",
"ethics",
"evidence",
"evil",
"evoke",
"evolve",
"exact",
"example",
"excess",
"exchange",
"excite",
"exclude",
"excuse",
"execute",
"exercise",
"exhaust",
"exhibit",
"exile",
"exist",
"exit",
"exotic",
"expand",
"expect",
"expire",
"explain",
"expose",
"express",
"extend",
"extra",
"eye",
"eyebrow",
"fabric",
"face",
"faculty",
"fade",
"faint",
"faith",
"fall",
"false",
"fame",
"family",
"famous",
"fan",
"fancy",
"fantasy",
"farm",
"fashion",
"fat",
"fatal",
"father",
"fatigue",
"fault",
"favorite",
"feature",
"february",
"federal",
"fee",
"feed",
"feel",
"female",
"fence",
"festival",
"fetch",
"fever",
"few",
"fiber",
"fiction",
"field",
"figure",
"file",
"film",
"filter",
"final",
"find",
"fine",
"finger",
"finish",
"fire",
"firm",
"first",
"fiscal",
"fish",
"fit",
"fitness",
"fix",
"flag",
"flame",
"flash",
"flat",
"flavor",
"flee",
"flight",
"flip",
"float",
"flock",
"floor",
"flower",
"fluid",
"flush",
"fly",
"foam",
"focus",
"fog",
"foil",
"fold",
"follow",
"food",
"foot",
"force",
"forest",
"forget",
"fork",
"fortune",
"forum",
"forward",
"fossil",
"foster",
"found",
"fox",
"fragile",
"frame",
"frequent",
"fresh",
"friend",
"fringe",
"frog",
"front",
"frost",
"frown",
"frozen",
"fruit",
"fuel",
"fun",
"funny",
"furnace",
"fury",
"future",
"gadget",
"gain",
"galaxy",
"gallery",
"game",
"gap",
"garage",
"garbage",
"garden",
"garlic",
"garment",
"gas",
"gasp",
"gate",
"gather",
"gauge",
"gaze",
"general",
"genius",
"genre",
"gentle",
"genuine",
"gesture",
"ghost",
"giant",
"gift",
"giggle",
"ginger",
"giraffe",
"girl",
"give",
"glad",
"glance",
"glare",
"glass",
"glide",
"glimpse",
"globe",
"gloom",
"glory",
"glove",
"glow",
"glue",
"goat",
"goddess",
"gold",
"good",
"goose",
"gorilla",
"gospel",
"gossip",
"govern",
"gown",
"grab",
"grace",
"grain",
"grant",
"grape",
"grass",
"gravity",
"great",
"green",
"grid",
"grief",
"grit",
"grocery",
"group",
"grow",
"grunt",
"guard",
"guess",
"guide",
"guilt",
"guitar",
"gun",
"gym",
"habit",
"hair",
"half",
"hammer",
"hamster",
"hand",
"happy",
"harbor",
"hard",
"harsh",
"harvest",
"hat",
"have",
"hawk",
"hazard",
"head",
"health",
"heart",
"heavy",
"hedgehog",
"height",
"hello",
"helmet",
"help",
"hen",
"hero",
"hidden",
"high",
"hill",
"hint",
"hip",
"hire",
"history",
"hobby",
"hockey",
"hold",
"hole",
"holiday",
"hollow",
"home",
"honey",
"hood",
"hope",
"horn",
"horror",
"horse",
"hospital",
"host",
"hotel",
"hour",
"hover",
"hub",
"huge",
"human",
"humble",
"humor",
"hundred",
"hungry",
"hunt",
"hurdle",
"hurry",
"hurt",
"husband",
"hybrid",
"ice",
"icon",
"idea",
"identify",
"idle",
"ignore",
"ill",
"illegal",
"illness",
"image",
"imitate",
"immense",
"immune",
"impact",
"impose",
"improve",
"impulse",
"inch",
"include",
"income",
"increase",
"index",
"indicate",
"indoor",
"industry",
"infant",
"inflict",
"inform",
"inhale",
"inherit",
"initial",
"inject",
"injury",
"inmate",
"inner",
"innocent",
"input",
"inquiry",
"insane",
"insect",
"inside",
"inspire",
"install",
"intact",
"interest",
"into",
"invest",
"invite",
"involve",
"iron",
"island",
"isolate",
"issue",
"item",
"ivory",
"jacket",
"jaguar",
"jar",
"jazz",
"jealous",
"jeans",
"jelly",
"jewel",
"job",
"join",
"joke",
"journey",
"joy",
"judge",
"juice",
"jump",
"jungle",
"junior",
"junk",
"just",
"kangaroo",
"keen",
"keep",
"ketchup",
"key",
"kick",
"kid",
"kidney",
"kind",
"kingdom",
"kiss",
"kit",
"kitchen",
"kite",
"kitten",
"kiwi",
"knee",
"knife",
"knock",
"know",
"lab",
"label",
"labor",
"ladder",
"lady",
"lake",
"lamp",
"language",
"laptop",
"large",
"later",
"latin",
"laugh",
"laundry",
"lava",
"law",
"lawn",
"lawsuit",
"layer",
"lazy",
"leader",
"leaf",
"learn",
"leave",
"lecture",
"left",
"leg",
"legal",
"legend",
"leisure",
"lemon",
"lend",
"length",
"lens",
"leopard",
"lesson",
"letter",
"level",
"liar",
"liberty",
"library",
"license",
"life",
"lift",
"light",
"like",
"limb",
"limit",
"link",
"lion",
"liquid",
"list",
"little",
"live",
"lizard",
"load",
"loan",
"lobster",
"local",
"lock",
"logic",
"lonely",
"long",
"loop",
"lottery",
"loud",
"lounge",
"love",
"loyal",
"lucky",
"luggage",
"lumber",
"lunar",
"lunch",
"luxury",
"lyrics",
"machine",
"mad",
"magic",
"magnet",
"maid",
"mail",
"main",
"major",
"make",
"mammal",
"man",
"manage",
"mandate",
"mango",
"mansion",
"manual",
"maple",
"marble",
"march",
"margin",
"marine",
"market",
"marriage",
"mask",
"mass",
"master",
"match",
"material",
"math",
"matrix",
"matter",
"maximum",
"maze",
"meadow",
"mean",
"measure",
"meat",
"mechanic",
"medal",
"media",
"melody",
"melt",
"member",
"memory",
"mention",
"menu",
"mercy",
"merge",
"merit",
"merry",
"mesh",
"message",
"metal",
"method",
"middle",
"midnight",
"milk",
"million",
"mimic",
"mind",
"minimum",
"minor",
"minute",
"miracle",
"mirror",
"misery",
"miss",
"mistake",
"mix",
"mixed",
"mixture",
"mobile",
"model",
"modify",
"mom",
"moment",
"monitor",
"monkey",
"monster",
"month",
"moon",
"moral",
"more",
"morning",
"mosquito",
"mother",
"motion",
"motor",
"mountain",
"mouse",
"move",
"movie",
"much",
"muffin",
"mule",
"multiply",
"muscle",
"museum",
"mushroom",
"music",
"must",
"mutual",
"myself",
"mystery",
"myth",
"naive",
"name",
"napkin",
"narrow",
"nasty",
"nation",
"nature",
"near",
"neck",
"need",
"negative",
"neglect",
"neither",
"nephew",
"nerve",
"nest",
"net",
"network",
"neutral",
"never",
"news",
"next",
"nice",
"night",
"noble",
"noise",
"nominee",
"noodle",
"normal",
"north",
"nose",
"notable",
"note",
"nothing",
"notice",
"novel",
"now",
"nuclear",
"number",
"nurse",
"nut",
"oak",
"obey",
"object",
"oblige",
"obscure",
"observe",
"obtain",
"obvious",
"occur",
"ocean",
"october",
"odor",
"off",
"offer",
"office",
"often",
"oil",
"okay",
"old",
"olive",
"olympic",
"omit",
"once",
"one",
"onion",
"online",
"only",
"open",
"opera",
"opinion",
"oppose",
"option",
"orange",
"orbit",
"orchard",
"order",
"ordinary",
"organ",
"orient",
"original",
"orphan",
"ostrich",
"other",
"outdoor",
"outer",
"output",
"outside",
"oval",
"oven",
"over",
"own",
"owner",
"oxygen",
"oyster",
"ozone",
"pact",
"paddle",
"page",
"pair",
"palace",
"palm",
"panda",
"panel",
"panic",
"panther",
"paper",
"parade",
"parent",
"park",
"parrot",
"party",
"pass",
"patch",
"path",
"patient",
"patrol",
"pattern",
"pause",
"pave",
"payment",
"peace",
"peanut",
"pear",
"peasant",
"pelican",
"pen",
"penalty",
"pencil",
"people",
"pepper",
"perfect",
"permit",
"person",
"pet",
"phone",
"photo",
"phrase",
"physical",
"piano",
"picnic",
"picture",
"piece",
"pig",
"pigeon",
"pill",
"pilot",
"pink",
"pioneer",
"pipe",
"pistol",
"pitch",
"pizza",
"place",
"planet",
"plastic",
"plate",
"play",
"please",
"pledge",
"pluck",
"plug",
"plunge",
"poem",
"poet",
"point",
"polar",
"pole",
"police",
"pond",
"pony",
"pool",
"popular",
"portion",
"position",
"possible",
"post",
"potato",
"pottery",
"poverty",
"powder",
"power",
"practice",
"praise",
"predict",
"prefer",
"prepare",
"present",
"pretty",
"prevent",
"price",
"pride",
"primary",
"print",
"priority",
"prison",
"private",
"prize",
"problem",
"process",
"produce",
"profit",
"program",
"project",
"promote",
"proof",
"property",
"prosper",
"protect",
"proud",
"provide",
"public",
"pudding",
"pull",
"pulp",
"pulse",
"pumpkin",
"punch",
"pupil",
"puppy",
"purchase",
"purity",
"purpose",
"purse",
"push",
"put",
"puzzle",
"pyramid",
"quality",
"quantum",
"quarter",
"question",
"quick",
"quit",
"quiz",
"quote",
"rabbit",
"raccoon",
"race",
"rack",
"radar",
"radio",
"rail",
"rain",
"raise",
"rally",
"ramp",
"ranch",
"random",
"range",
"rapid",
"rare",
"rate",
"rather",
"raven",
"raw",
"razor",
"ready",
"real",
"reason",
"rebel",
"rebuild",
"recall",
"receive",
"recipe",
"record",
"recycle",
"reduce",
"reflect",
"reform",
"refuse",
"region",
"regret",
"regular",
"reject",
"relax",
"release",
"relief",
"rely",
"remain",
"remember",
"remind",
"remove",
"render",
"renew",
"rent",
"reopen",
"repair",
"repeat",
"replace",
"report",
"require",
"rescue",
"resemble",
"resist",
"resource",
"response",
"result",
"retire",
"retreat",
"return",
"reunion",
"reveal",
"review",
"reward",
"rhythm",
"rib",
"ribbon",
"rice",
"rich",
"ride",
"ridge",
"rifle",
"right",
"rigid",
"ring",
"riot",
"ripple",
"risk",
"ritual",
"rival",
"river",
"road",
"roast",
"robot",
"robust",
"rocket",
"romance",
"roof",
"rookie",
"room",
"rose",
"rotate",
"rough",
"round",
"route",
"royal",
"rubber",
"rude",
"rug",
"rule",
"run",
"runway",
"rural",
"sad",
"saddle",
"sadness",
"safe",
"sail",
"salad",
"salmon",
"salon",
"salt",
"salute",
"same",
"sample",
"sand",
"satisfy",
"satoshi",
"sauce",
"sausage",
"save",
"say",
"scale",
"scan",
"scare",
"scatter",
"scene",
"scheme",
"school",
"science",
"scissors",
"scorpion",
"scout",
"scrap",
"screen",
"script",
"scrub",
"sea",
"search",
"season",
"seat",
"second",
"secret",
"section",
"security",
"seed",
"seek",
"segment",
"select",
"sell",
"seminar",
"senior",
"sense",
"sentence",
"series",
"service",
"session",
"settle",
"setup",
"seven",
"shadow",
"shaft",
"shallow",
"share",
"shed",
"shell",
"sheriff",
"shield",
"shift",
"shine",
"ship",
"shiver",
"shock",
"shoe",
"shoot",
"shop",
"short",
"shoulder",
"shove",
"shrimp",
"shrug",
"shuffle",
"shy",
"sibling",
"sick",
"side",
"siege",
"sight",
"sign",
"silent",
"silk",
"silly",
"silver",
"similar",
"simple",
"since",
"sing",
"siren",
"sister",
"situate",
"six",
"size",
"skate",
"sketch",
"ski",
"skill",
"skin",
"skirt",
"skull",
"slab",
"slam",
"sleep",
"slender",
"slice",
"slide",
"slight",
"slim",
"slogan",
"slot",
"slow",
"slush",
"small",
"smart",
"smile",
"smoke",
"smooth",
"snack",
"snake",
"snap",
"sniff",
"snow",
"soap",
"soccer",
"social",
"sock",
"soda",
"soft",
"solar",
"soldier",
"solid",
"solution",
"solve",
"someone",
"song",
"soon",
"sorry",
"sort",
"soul",
"sound",
"soup",
"source",
"south",
"space",
"spare",
"spatial",
"spawn",
"speak",
"special",
"speed",
"spell",
"spend",
"sphere",
"spice",
"spider",
"spike",
"spin",
"spirit",
"split",
"spoil",
"sponsor",
"spoon",
"sport",
"spot",
"spray",
"spread",
"spring",
"spy",
"square",
"squeeze",
"squirrel",
"stable",
"stadium",
"staff",
"stage",
"stairs",
"stamp",
"stand",
"start",
"state",
"stay",
"steak",
"steel",
"stem",
"step",
"stereo",
"stick",
"still",
"sting",
"stock",
"stomach",
"stone",
"stool",
"story",
"stove",
"strategy",
"street",
"strike",
"strong",
"struggle",
"student",
"stuff",
"stumble",
"style",
"subject",
"submit",
"subway",
"success",
"such",
"sudden",
"suffer",
"sugar",
"suggest",
"suit",
"summer",
"sun",
"sunny",
"sunset",
"super",
"supply",
"supreme",
"sure",
"surface",
"surge",
"surprise",
"surround",
"survey",
"suspect",
"sustain",
"swallow",
"swamp",
"swap",
"swarm",
"swear",
"sweet",
"swift",
"swim",
"swing",
"switch",
"sword",
"symbol",
"symptom",
"syrup",
"system",
"table",
"tackle",
"tag",
"tail",
"talent",
"talk",
"tank",
"tape",
"target",
"task",
"taste",
"tattoo",
"taxi",
"teach",
"team",
"tell",
"ten",
"tenant",
"tennis",
"tent",
"term",
"test",
"text",
"thank",
"that",
"theme",
"then",
"theory",
"there",
"they",
"thing",
"this",
"thought",
"three",
"thrive",
"throw",
"thumb",
"thunder",
"ticket",
"tide",
"tiger",
"tilt",
"timber",
"time",
"tiny",
"tip",
"tired",
"tissue",
"title",
"toast",
"tobacco",
"today",
"toddler",
"toe",
"together",
"toilet",
"token",
"tomato",
"tomorrow",
"tone",
"tongue",
"tonight",
"tool",
"tooth",
"top",
"topic",
"topple",
"torch",
"tornado",
"tortoise",
"toss",
"total",
"tourist",
"toward",
"tower",
"town",
"toy",
"track",
"trade",
"traffic",
"tragic",
"train",
"transfer",
"trap",
"trash",
"travel",
"tray",
"treat",
"tree",
"trend",
"trial",
"tribe",
"trick",
"trigger",
"trim",
"trip",
"trophy",
"trouble",
"truck",
"true",
"truly",
"trumpet",
"trust",
"truth",
"try",
"tube",
"tuition",
"tumble",
"tuna",
"tunnel",
"turkey",
"turn",
"turtle",
"twelve",
"twenty",
"twice",
"twin",
"twist",
"two",
"type",
"typical",
"ugly",
"umbrella",
"unable",
"unaware",
"uncle",
"uncover",
"under",
"undo",
"unfair",
"unfold",
"unhappy",
"uniform",
"unique",
"unit",
"universe",
"unknown",
"unlock",
"until",
"unusual",
"unveil",
"update",
"upgrade",
"uphold",
"upon",
"upper",
"upset",
"urban",
"urge",
"usage",
"use",
"used",
"useful",
"useless",
"usual",
"utility",
"vacant",
"vacuum",
"vague",
"valid",
"valley",
"valve",
"van",
"vanish",
"vapor",
"various",
"vast",
"vault",
"vehicle",
"velvet",
"vendor",
"venture",
"venue",
"verb",
"verify",
"version",
"very",
"vessel",
"veteran",
"viable",
"vibrant",
"vicious",
"victory",
"video",
"view",
"village",
"vintage",
"violin",
"virtual",
"virus",
"visa",
"visit",
"visual",
"vital",
"vivid",
"vocal",
"voice",
"void",
"volcano",
"volume",
"vote",
"voyage",
"wage",
"wagon",
"wait",
"walk",
"wall",
"walnut",
"want",
"warfare",
"warm",
"warrior",
"wash",
"wasp",
"waste",
"water",
"wave",
"way",
"wealth",
"weapon",
"wear",
"weasel",
"weather",
"web",
"wedding",
"weekend",
"weird",
"welcome",
"west",
"wet",
"whale",
"what",
"wheat",
"wheel",
"when",
"where",
"whip",
"whisper",
"wide",
"width",
"wife",
"wild",
"will",
"win",
"window",
"wine",
"wing",
"wink",
"winner",
"winter",
"wire",
"wisdom",
"wise",
"wish",
"witness",
"wolf",
"woman",
"wonder",
"wood",
"wool",
"word",
"work",
"world",
"worry",
"worth",
"wrap",
"wreck",
"wrestle",
"wrist",
"write",
"wrong",
"yard",
"year",
"yellow",
"you",
"young",
"youth",
"zebra",
"zero",
"zone",
"zoo"
]

oddWordDict = {
"00":"adroitness",
"01":"adviser",
"02":"aftermath",
"03":"aggregate",
"04":"alkali",
"05":"almighty",
"06":"amulet",
"07":"amusement",
"08":"antenna",
"09":"applicant",
"0A":"Apollo",
"0B":"armistice",
"0C":"article",
"0D":"asteroid",
"0E":"Atlantic",
"0F":"atmosphere",
"10":"autopsy",
"11":"Babylon",
"12":"backwater",
"13":"barbecue",
"14":"belowground",
"15":"bifocals",
"16":"bodyguard",
"17":"bookseller",
"18":"borderline",
"19":"bottomless",
"1A":"Bradbury",
"1B":"bravado",
"1C":"Brazilian",
"1D":"breakaway",
"1E":"Burlington",
"1F":"businessman",
"20":"butterfat",
"21":"Camelot",
"22":"candidate",
"23":"cannonball",
"24":"Capricorn",
"25":"caravan",
"26":"caretaker",
"27":"celebrate",
"28":"cellulose",
"29":"certify",
"2A":"chambermaid",
"2B":"Cherokee",
"2C":"Chicago",
"2D":"clergyman",
"2E":"coherence",
"2F":"combustion",
"30":"commando",
"31":"company",
"32":"component",
"33":"concurrent",
"34":"confidence",
"35":"conformist",
"36":"congregate",
"37":"consensus",
"38":"consulting",
"39":"corporate",
"3A":"corrosion",
"3B":"councilman",
"3C":"crossover",
"3D":"crucifix",
"3E":"cumbersome",
"3F":"customer",
"Hex":"Odd Word",
"40":"Dakota",
"41":"decadence",
"42":"December",
"43":"decimal",
"44":"designing",
"45":"detector",
"46":"detergent",
"47":"determine",
"48":"dictator",
"49":"dinosaur",
"4A":"direction",
"4B":"disable",
"4C":"disbelief",
"4D":"disruptive",
"4E":"distortion",
"4F":"document",
"50":"embezzle",
"51":"enchanting",
"52":"enrollment",
"53":"enterprise",
"54":"equation",
"55":"equipment",
"56":"escapade",
"57":"Eskimo",
"58":"everyday",
"59":"examine",
"5A":"existence",
"5B":"exodus",
"5C":"fascinate",
"5D":"filament",
"5E":"finicky",
"5F":"forever",
"60":"fortitude",
"61":"frequency",
"62":"gadgetry",
"63":"Galveston",
"64":"getaway",
"65":"glossary",
"66":"gossamer",
"67":"graduate",
"68":"gravity",
"69":"guitarist",
"6A":"hamburger",
"6B":"Hamilton",
"6C":"handiwork",
"6D":"hazardous",
"6E":"headwaters",
"6F":"hemisphere",
"70":"hesitate",
"71":"hideaway",
"72":"holiness",
"73":"hurricane",
"74":"hydraulic",
"75":"impartial",
"76":"impetus",
"77":"inception",
"78":"indigo",
"79":"inertia",
"7A":"infancy",
"7B":"inferno",
"7C":"informant",
"7D":"insincere",
"7E":"insurgent",
"7F":"integrate",
"80":"intention",
"81":"inventive",
"82":"Istanbul",
"83":"Jamaica",
"84":"Jupiter",
"85":"leprosy",
"86":"letterhead",
"87":"liberty",
"88":"maritime",
"89":"matchmaker",
"8A":"maverick",
"8B":"Medusa",
"8C":"megaton",
"8D":"microscope",
"8E":"microwave",
"8F":"midsummer",
"90":"millionaire",
"91":"miracle",
"92":"misnomer",
"93":"molasses",
"94":"molecule",
"95":"Montana",
"96":"monument",
"97":"mosquito",
"98":"narrative",
"99":"nebula",
"9A":"newsletter",
"9B":"Norwegian",
"9C":"October",
"9D":"Ohio",
"9E":"onlooker",
"9F":"opulent",
"A0":"Orlando",
"A1":"outfielder",
"A2":"Pacific",
"A3":"pandemic",
"A4":"Pandora",
"A5":"paperweight",
"A6":"paragon",
"A7":"paragraph",
"A8":"paramount",
"A9":"passenger",
"AA":"pedigree",
"AB":"Pegasus",
"AC":"penetrate",
"AD":"perceptive",
"AE":"performance",
"AF":"pharmacy",
"B0":"phonetic",
"B1":"photograph",
"B2":"pioneer",
"B3":"pocketful",
"B4":"politeness",
"B5":"positive",
"B6":"potato",
"B7":"processor",
"B8":"provincial",
"B9":"proximate",
"BA":"puberty",
"BB":"publisher",
"BC":"pyramid",
"BD":"quantity",
"BE":"racketeer",
"BF":"rebellion",
"C0":"recipe",
"C1":"recover",
"C2":"repellent",
"C3":"replica",
"C4":"reproduce",
"C5":"resistor",
"C6":"responsive",
"C7":"retraction",
"C8":"retrieval",
"C9":"retrospect",
"CA":"revenue",
"CB":"revival",
"CC":"revolver",
"CD":"sandalwood",
"CE":"sardonic",
"CF":"Saturday",
"D0":"savagery",
"D1":"scavenger",
"D2":"sensation",
"D3":"sociable",
"D4":"souvenir",
"D5":"specialist",
"D6":"speculate",
"D7":"stethoscope",
"D8":"stupendous",
"D9":"supportive",
"DA":"surrender",
"DB":"suspicious",
"DC":"sympathy",
"DD":"tambourine",
"DE":"telephone",
"DF":"therapist",
"E0":"tobacco",
"E1":"tolerance",
"E2":"tomorrow",
"E3":"torpedo",
"E4":"tradition",
"E5":"travesty",
"E6":"trombonist",
"E7":"truncated",
"E8":"typewriter",
"E9":"ultimate",
"EA":"undaunted",
"EB":"underfoot",
"EC":"unicorn",
"ED":"unify",
"EE":"universe",
"EF":"unravel",
"F0":"upcoming",
"F1":"vacancy",
"F2":"vagabond",
"F3":"vertigo",
"F4":"Virginia",
"F5":"visitor",
"F6":"vocalist",
"F7":"voyager",
"F8":"warranty",
"F9":"Waterloo",
"FA":"whimsical",
"FB":"Wichita",
"FC":"Wilmington",
"FD":"Wyoming",
"FE":"yesteryear",
"FF":"Yucatan",
}

evenWordDict = {
"00":"aardvark",
"01":"absurd",
"02":"accrue",
"03":"acme",
"04":"adrift",
"05":"adult",
"06":"afflict",
"07":"ahead",
"08":"aimless",
"09":"Algol",
"0A":"allow",
"0B":"alone",
"0C":"ammo",
"0D":"ancient",
"0E":"apple",
"0F":"artist",
"10":"assume",
"11":"Athens",
"12":"atlas",
"13":"Aztec",
"14":"baboon",
"15":"backfield",
"16":"backward",
"17":"banjo",
"18":"beaming",
"19":"bedlamp",
"1A":"beehive",
"1B":"beeswax",
"1C":"befriend",
"1D":"Belfast",
"1E":"berserk",
"1F":"billiard",
"20":"bison",
"21":"blackjack",
"22":"blockade",
"23":"blowtorch",
"24":"bluebird",
"25":"bombast",
"26":"bookshelf",
"27":"brackish",
"28":"breadline",
"29":"breakup",
"2A":"brickyard",
"2B":"briefcase",
"2C":"Burbank",
"2D":"button",
"2E":"buzzard",
"2F":"cement",
"30":"chairlift",
"31":"chatter",
"32":"checkup",
"33":"chisel",
"34":"choking",
"35":"chopper",
"36":"Christmas",
"37":"clamshell",
"38":"classic",
"39":"classroom",
"3A":"cleanup",
"3B":"clockwork",
"3C":"cobra",
"3D":"commence",
"3E":"concert",
"3F":"cowbell",
"Hex":"Even Word",
"40":"crackdown",
"41":"cranky",
"42":"crowfoot",
"43":"crucial",
"44":"crumpled",
"45":"crusade",
"46":"cubic",
"47":"dashboard",
"48":"deadbolt",
"49":"deckhand",
"4A":"dogsled",
"4B":"dragnet",
"4C":"drainage",
"4D":"dreadful",
"4E":"drifter",
"4F":"dropper",
"50":"drumbeat",
"51":"drunken",
"52":"Dupont",
"53":"dwelling",
"54":"eating",
"55":"edict",
"56":"egghead",
"57":"eightball",
"58":"endorse",
"59":"endow",
"5A":"enlist",
"5B":"erase",
"5C":"escape",
"5D":"exceed",
"5E":"eyeglass",
"5F":"eyetooth",
"60":"facial",
"61":"fallout",
"62":"flagpole",
"63":"flatfoot",
"64":"flytrap",
"65":"fracture",
"66":"framework",
"67":"freedom",
"68":"frighten",
"69":"gazelle",
"6A":"Geiger",
"6B":"glitter",
"6C":"glucose",
"6D":"goggles",
"6E":"goldfish",
"6F":"gremlin",
"70":"guidance",
"71":"hamlet",
"72":"highchair",
"73":"hockey",
"74":"indoors",
"75":"indulge",
"76":"inverse",
"77":"involve",
"78":"island",
"79":"jawbone",
"7A":"keyboard",
"7B":"kickoff",
"7C":"kiwi",
"7D":"klaxon",
"7E":"locale",
"7F":"lockup",
"80":"merit",
"81":"minnow",
"82":"miser",
"83":"Mohawk",
"84":"mural",
"85":"music",
"86":"necklace",
"87":"Neptune",
"88":"newborn",
"89":"nightbird",
"8A":"Oakland",
"8B":"obtuse",
"8C":"offload",
"8D":"optic",
"8E":"orca",
"8F":"payday",
"90":"peachy",
"91":"pheasant",
"92":"physique",
"93":"playhouse",
"94":"Pluto",
"95":"preclude",
"96":"prefer",
"97":"preshrunk",
"98":"printer",
"99":"prowler",
"9A":"pupil",
"9B":"puppy",
"9C":"python",
"9D":"quadrant",
"9E":"quiver",
"9F":"quota",
"A0":"ragtime",
"A1":"ratchet",
"A2":"rebirth",
"A3":"reform",
"A4":"regain",
"A5":"reindeer",
"A6":"rematch",
"A7":"repay",
"A8":"retouch",
"A9":"revenge",
"AA":"reward",
"AB":"rhythm",
"AC":"ribcage",
"AD":"ringbolt",
"AE":"robust",
"AF":"rocker",
"B0":"ruffled",
"B1":"sailboat",
"B2":"sawdust",
"B3":"scallion",
"B4":"scenic",
"B5":"scorecard",
"B6":"Scotland",
"B7":"seabird",
"B8":"select",
"B9":"sentence",
"BA":"shadow",
"BB":"shamrock",
"BC":"showgirl",
"BD":"skullcap",
"BE":"skydive",
"BF":"slingshot",
"C0":"slowdown",
"C1":"snapline",
"C2":"snapshot",
"C3":"snowcap",
"C4":"snowslide",
"C5":"solo",
"C6":"southward",
"C7":"soybean",
"C8":"spaniel",
"C9":"spearhead",
"CA":"spellbind",
"CB":"spheroid",
"CC":"spigot",
"CD":"spindle",
"CE":"spyglass",
"CF":"stagehand",
"D0":"stagnate",
"D1":"stairway",
"D2":"standard",
"D3":"stapler",
"D4":"steamship",
"D5":"sterling",
"D6":"stockman",
"D7":"stopwatch",
"D8":"stormy",
"D9":"sugar",
"DA":"surmount",
"DB":"suspense",
"DC":"sweatband",
"DD":"swelter",
"DE":"tactics",
"DF":"talon",
"E0":"tapeworm",
"E1":"tempest",
"E2":"tiger",
"E3":"tissue",
"E4":"tonic",
"E5":"topmost",
"E6":"tracker",
"E7":"transit",
"E8":"trauma",
"E9":"treadmill",
"EA":"Trojan",
"EB":"trouble",
"EC":"tumor",
"ED":"tunnel",
"EE":"tycoon",
"EF":"uncut",
"F0":"unearth",
"F1":"unwind",
"F2":"uproot",
"F3":"upset",
"F4":"upshot",
"F5":"vapor",
"F6":"village",
"F7":"virus",
"F8":"Vulcan",
"F9":"waffle",
"FA":"wallet",
"FB":"watchword",
"FC":"wayside",
"FD":"willow",
"FE":"woodlark",
"FF":"Zulu",
}


def prettyPrintUnicastAddress(ip: ipaddress.IPv6Address) -> None:
    ipStr = ip.exploded


    print("IANA Global Prefix: \t\t" + Fore.GREEN, end="")
    iana_global_prefix = ipaddress.ip_interface(ipStr + "/3").network.network_address
    print(iana_global_prefix)

    print(Fore.RESET + "With Regional Registry: \t" + Fore.GREEN, end="")
    regional_registry = ipaddress.ip_interface(ipStr + "/23").network.network_address
    print(regional_registry, end = "")
    print(Fore.RESET + "\t(North America)")

    print(Fore.RESET + "With Provider Prefix: \t\t" + Fore.GREEN, end="")
    provider_prefix = ipaddress.ip_interface(ipStr + "/32").network.network_address
    print(provider_prefix, end="")
    print(Fore.RESET + "\t(ISP number)")

    print(Fore.RESET + "With Site Prefix: \t\t\t" + Fore.GREEN, end="")
    site_prefix = ipaddress.ip_interface(ipStr + "/48").network.network_address
    print(site_prefix, end="")
    print(Fore.RESET + "\t(Company number)")

    print(Fore.RESET + "With Subnet Prefix: \t\t" + Fore.GREEN, end="")
    subnet_prefix = ipaddress.ip_interface(ipStr + "/64").network.network_address
    print(subnet_prefix, end="")
    print(Fore.RESET + "\t(Company's Subnet)")

    subnetPrefix = ipStr[:19]
    interfaceIdentifier = ipStr[20:]
    print("\t\t\t\t\t\t\t" + Fore.GREEN + subnetPrefix + Fore.RESET + ":" + Fore.RED + interfaceIdentifier + Fore.RESET )
    print("\t\t\t\t\t\t\t\t" + Fore.GREEN + "Subnet Prefix " + Fore.RESET + Fore.RED + "   Interface Identifier (EUI-64 Bit)" + Fore.RESET )



    mac = ipv62mac(ipStr)
    print("MAC address that would generate this: " + mac)
    org = get("https://api.macvendors.com/" + mac).text
    if "Not Found" not in org:
        print("\tMAC Issued Org: " + org)
    else:
        print("\t(But this MAC looks fake)")

    #doubleCheck = macToIPv6_only_last_64_bits_EUI(mac)
    #print("EUI-64: " + doubleCheck)






# From: https://learnmeabitcoin.com/technical/mnemonic#bip39-wordlist
def ip_to_bip_words(ip: ipaddress.IPv6Address) -> str:
    sumString = ""
    for hextet in ip.exploded.split(":"):
        index1 = int(hextet[:2], 16)
        index2 = int(hextet[2:], 16)
        sumString += bip39WordList[index1] + " " + bip39WordList[index2] + " : "
    return sumString.rstrip(": ")

def ip_to_words(ip: ipaddress.IPv6Address) -> str:
    sumString = ""
    for hextet in ip.exploded.split(":"):
        sumString += hex_to_words(hextet) + " : "
    return sumString.rstrip(": ")

# Test: hex_to_words("63d0cea9d550e495fde1b81310951bd0")
def hex_to_words(input: str) -> str:
    aList = []
    for i in range(0,len(input),2):
        hexString = input[i:i + 2].upper()
        if (not hexString in oddWordDict)  or (not hexString in oddWordDict):
            print("ERROR: Bad hex byte (probably non-hex char, or uneven hex string): " + hexString)
            return " ".join(aList)
        if (i % 2) == 1:
            aList.append( oddWordDict[hexString])
        else:
            aList.append( evenWordDict[hexString])
    return " ".join(aList)


# Start of logic

if (ipStr.count("::") > 2):
    print("Error: Can only have 1 '::'" )
    exit()
elif(ipStr == "::"):
    print(ipStr + " is not a valid address. BUT it is used as a source address when StateLess Address Auto-Configuration (SLAAC) is doing Neighbor Solicitation ")
    exit()

print("Analyzing: " + ipStr)
ip = ipaddress.ip_address(ipStr)


KnownIPs = {
    # TODO: Add this small list: https://youtu.be/z7Al3P8ShM8?t=1482
    ipaddress.ip_address("2001:4860:4860::8888"): "Google DNS",
    ipaddress.ip_address("2001:4860:4860::8844"): "Google DNS",
    ipaddress.ip_address("FF02::1"): "All nodes",
    ipaddress.ip_address("FF02::2"): "",
    ipaddress.ip_address("FF02::101"): "All NTP Servers",
    ipaddress.ip_address("FF02::1:2"): "... All Routers?",
    ipaddress.ip_address("::1"): "Loop back address. This should never be used in a real packet unless you are going through the Stateless IP assignment process?",
}

# Built in to the IP address library in python ipaddress
# From https://docs.python.org/3/library/ipaddress.html
if ip.is_multicast:
    print("RFC 2373 defines this as " + Fore.GREEN + "Multicast" + Fore.RESET)
if ip.is_private:
    print("IANA ipv6-special-registry defines this as " + Fore.BLUE + "Private" + Fore.RESET)
if ip.is_global:
    print("IANA ipv6-special-registry defines this as " + Fore.GREEN + "Global" + Fore.RESET)
if ip.is_unspecified:
    print("RFC 2373 defines this as " + Fore.YELLOW + "Unspecified" + Fore.RESET)
if ip.is_reserved:
    print("IETF has " + Fore.RED + "reserved this address" + Fore.RESET)
if ip.is_loopback:
    print("RFC 2373 defines this as a " + Fore.BLUE + "loopback address" + Fore.RESET)
if ip.is_link_local:
    print("RFC 3927 defines this as " + Fore.BLUE + "link local" + Fore.RESET)
if ip.is_site_local:
    print("RFC 3879 defines this as deprecated" + Fore.RED + "site local" + Fore.RESET)
# Embedded IPv4 - if they start with ::FFFF/96
mapped = ip.ipv4_mapped
if mapped != None:
    print("Mapped IPv4: " + mapped)

# Scope ID - What is that?
#scope_id = ip.scope_id
#if scope_id != None:
#    print("Scope ID: " + scope_id)

# sean created
if ip in ipaddress.ip_network('0000::/8',strict=False):
    print("This IP address is reserved by IETF [RFC3513]]")
if ip in ipaddress.ip_network('2000::/3',strict=False):
    prettyPrintUnicastAddress(ip)
    print("This IP is a Global Unicast address; only identifiies only one node, and are only used for for one to one " +
          "communication. These addresses are also Globally routable and reachable in the IPv6 Internet [RFC3513]")
if ip in ipaddress.ip_network('FC00::/7',strict=False):
    prettyPrintUnicastAddress(ip)
    print("This IP is a Unique Local Unicast Address (ULA); only identifiies only one node, and are only used for for one to one communication. Also known as Private IPv6 addresses, Local addresses and CAN NOT be routed on the internet but routers can route them through a network (like RFC 1918: 10.0.0.0/8). Registration with a numbering authority not needed. [RFC4193]")
if ip in ipaddress.ip_network('FE80::/10',strict=False):
    prettyPrintUnicastAddress(ip)
    print("This IP is Link Local Unicast. Router will NOT forward these packets, they are only for the local link (aka the single local network segment). Present in an auto self config; So all routers listen for this and will NOT forward the packects. Link local addresses are present on all interfaces and are used for many essential link protocols such as neighbor discovery, duplicate address detection and router advertisement. [RFC3513]")
if ip in ipaddress.ip_network('FEC0::/10',strict=False):
    print("This IP is technically reserved by IETF and was considered 'Site Local address'. Deprecated by Cisco on iOS (just started dropping all packets). Should probably never be used")
if ip in ipaddress.ip_network('FF00::/8',strict=False):
    print("This IP is local Multicast. Broadcast for IPv6 networks. It is NOT routed on the internet. If it starts with ff02::1 it's likely part of the StateLess Address Auto-Configuration (SLAAC) where a node is trying to resolve a MAC address (FF02::1:xx:xx:xx:xx where the last 64 bits is the EUI-64 of the device we are attempting to communicate with).  ")
#if ip in ipaddress.ip_network("FF0E:",strict=False):
#    print("Multicast Global. Self assigned?")
#if ip in ipaddress.ip_network("FF0E::1:ff00::/104",strict=False):
#    print("This IP is self assigned config IP")

if ip in ipaddress.ip_network('2002::/16',strict=False):
    print("This is a 6to4 relay address. From IP 192.88.99/24")

# TODO:
# if ip address ends in all-zeros for it's EUI-64 bit address then state here that it might be used as an Anycast address
# But Anycast address could also be litterially any Unicast address (Anycast means more than one interface can have this address)

# TODO:
# test for "FF02::1:FFxx:xxxx" - the last 6 hex char's (that's 28 bits right?),
# that's the SLAAC, all-nodes multicast, and this is the IP address look up of a neighbor
# Seen in https://youtu.be/z7Al3P8ShM8?t=1482

# TODO: Make "Pretty Print Multicast function: https://www.ciscopress.com/articles/article.asp?p=2803866&seqNum=5#:~:text=An%20IPv6%20multicast%20address%20defines,the%20IPv4%20multicast%20address%20224.0.&text=A%20packet%20sent%20to%20a,has%20a%20unicast%20source%20address.
# TODO: Add information from IANA.org: https://www.iana.org/assignments/iana-ipv6-special-registry/iana-ipv6-special-registry.xhtml
# TODO: Add information from IANA.org: https://www.iana.org/assignments/ipv6-address-space/ipv6-address-space.xhtml
#       Ex. "Well Known Prefix" 64:ff9b::/96 is used in an algorithmic mapping between IPv4 to IPv6 addresses
# TODO: Add information from IANA.org: https://www.iana.org/assignments/ipv6-unicast-address-assignments/ipv6-unicast-address-assignments.xhtml


if ip in KnownIPs:
    print("Well Known: " + KnownIPs[ip])
# Global ID

# MAC address generated 'Interface ID' or 'EUI-64'
# last 64 bits


print("\n\nUseless Information:")
print(ipStr)
print(ip.exploded)
print(ip_to_words(ip))
print(ip_to_bip_words(ip))
print(ip.reverse_pointer)